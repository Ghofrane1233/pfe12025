stages:
  - test
  - build

variables:
  NODE_VERSION: "16"
  DB_HOST: "mysql"
  DB_USER: "root"
  DB_PASSWORD: "password"
  DB_NAME: "test_db"
  JWT_SECRET: "test-secret"
  MYSQL_DATABASE: "test_db"
  MYSQL_ROOT_PASSWORD: "password"

services:
  - name: mysql:5.7
    alias: mysql
    command: ["--default-authentication-plugin=mysql_native_password"]
  - name: redis:alpine
    alias: redis

cache:
  paths:
    - node_modules/

unit-tests:
  stage: test
  image: node:$NODE_VERSION
  before_script:
    - apt-get update -yq && apt-get install -yq default-mysql-client
    # Wait for MySQL to be ready
    - for i in {1..10}; do mysql --host=$DB_HOST --user=$DB_USER --password=$DB_PASSWORD -e "SHOW DATABASES;" && break || sleep 5; done
    # Create database and tables
    - mysql --host=$DB_HOST --user=$DB_USER --password=$DB_PASSWORD -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;"
    - mysql --host=$DB_HOST --user=$DB_USER --password=$DB_PASSWORD $DB_NAME < db/schema.sql
    # Install dependencies
    - npm ci --include=dev
    # Verify Jest is installed
    - npm list jest || npm install jest --save-dev
    # Install test reporters
    - npm install jest-junit --save-dev
  script:
    # Run tests with coverage and JUnit reporting
    - npx jest --ci --coverage --reporters=default --reporters=jest-junit --detectOpenHandles
  artifacts:
    when: always
    reports:
      junit:
        - junit.xml
    paths:
      - coverage/
    expire_in: 1 week
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'

docker-build:
  image: docker:cli
  stage: build
  services:
    - docker:dind
  variables:
    DOCKER_IMAGE_NAME: ghofrane694/msdocument:$CI_COMMIT_REF_SLUG
  before_script:
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
  script:
    - docker build --pull -t "$DOCKER_IMAGE_NAME" .
    - docker push "$DOCKER_IMAGE_NAME"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker tag "$DOCKER_IMAGE_NAME" "ghofrane694/msdocument:latest"
        docker push "ghofrane694/msdocument:latest"
      fi
  rules:
    - exists:
        - Dockerfile
      when: always
  needs: ["unit-tests"]